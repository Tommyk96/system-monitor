name: Run Tests

on:
  push:
    branches:
      - main  # Запускать только для пушей в ветку 'main'
  pull_request:
    branches:
      - main  # Запускать на PR в ветку 'main'

jobs:
  test:
    runs-on: ubuntu-latest  # Используется Ubuntu

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev libx11-dev libxext-dev  # Устанавливаем дополнительные зависимости
          sudo apt-get install -y postgresql postgresql-contrib  # Устанавливаем PostgreSQL

      - name: Start PostgreSQL service
        run: |
          sudo service postgresql start  # Запускаем PostgreSQL
          # Ждем несколько секунд, чтобы PostgreSQL был готов
          sleep 10
          # Создаем тестовую базу данных и пользователя
          sudo -u postgres psql -c "CREATE DATABASE test_db;"
          sudo -u postgres psql -c "CREATE USER test_user WITH PASSWORD 'test_password';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE test_db TO test_user;"

      - name: Set up environment variables
        run: |
          echo "DB_PASSWORD=test_password" >> $GITHUB_ENV
          echo "DB_NAME=test_db" >> $GITHUB_ENV
          echo "DB_USER=test_user" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m ensurepip --upgrade  # Обновляем pip, если необходимо
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt  # Устанавливаем зависимости без кэша

      - name: Run tests
        run: |
          export PYTHONPATH=.
          pytest -v --maxfail=1 --disable-warnings --cache-clear --tb=short  # Запуск тестов с улучшениями


