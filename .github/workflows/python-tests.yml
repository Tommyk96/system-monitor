name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      # Step 4: Set up environment variables from DB_ENV_VARS
      - name: Set up environment variables from DB_ENV_VARS
        run: |
          echo "DB_ENV_VARS=${{ secrets.DB_ENV_VARS }}" > db_env.json
          export DB_NAME=$(jq -r '.DB_NAME' db_env.json)
          export DB_USER=$(jq -r '.DB_USER' db_env.json)
          export DB_PASSWORD=$(jq -r '.DB_PASSWORD' db_env.json)
          export DB_HOST=$(jq -r '.DB_HOST' db_env.json)
          export DB_PORT=$(jq -r '.DB_PORT' db_env.json)
          echo "DB_NAME=$DB_NAME"
          echo "DB_USER=$DB_USER"
          echo "DB_HOST=$DB_HOST"
          echo "DB_PORT=$DB_PORT"

      # Step 5: Verify environment variables
      - name: Verify environment variables
        run: |
          echo "DB_NAME=$DB_NAME"
          echo "DB_USER=$DB_USER"
          echo "DB_HOST=$DB_HOST"
          echo "DB_PORT=$DB_PORT"

      # Step 6: Run tests
      - name: Run tests
        run: |
          export PYTHONPATH=.
          pytest -v --maxfail=1 --disable-warnings --cache-clear --tb=short

















