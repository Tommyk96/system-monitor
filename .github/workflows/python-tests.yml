name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: system_data
          POSTGRES_USER: admin_user
        options: >-
          --health-cmd="pg_isready -U admin_user -d system_data"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Python and pip
        run: |
          sudo apt update
          sudo apt install -y python3-pip

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Set up environment variables from .env
        run: |
          echo "DB_NAME=system_data" >> $GITHUB_ENV
          echo "DB_USER=admin_user" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=postgres" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV

      - name: Build and start containers using Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for PostgreSQL to be ready
        run: |
          attempt=0
          sleep 10  # Добавляем небольшую задержку
          until pg_isready -h postgres -U admin_user -d system_data -p 5432 -t 60 || [ $attempt -ge 30 ]; do
            echo "Waiting for PostgreSQL to be ready... Attempt $((attempt+1))"
            sleep 5
            attempt=$((attempt+1))
          done
          if [ $attempt -ge 30 ]; then
            echo "PostgreSQL did not become ready in time!"
            exit 1
          fi

      - name: Check PostgreSQL logs
        run: |
          docker logs postgres || echo "No logs found"

      - name: Run tests
        run: |
          export PYTHONPATH=.
          pytest -v --maxfail=1 --disable-warnings --cache-clear --tb=short

      - name: Stop and remove Docker containers
        run: |
          docker-compose down


